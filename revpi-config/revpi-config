#!/bin/bash
#
# SPDX-License-Identifier: GPL-2.0-or-later
#
# SPDX-FileCopyrightText: 2016-2023 KUNBUS GmbH


# reset environment
if [ "$(/usr/bin/env | /bin/grep -Ev '^(PWD|SHLVL|_)=')" ]; then
	exec /usr/bin/env - /bin/bash "$0" "$@"
fi

CONFIG=/boot/config.txt
CPUFREQCONFIG=/etc/default/cpufrequtils

trap "exit 1" SIGUSR1
PROC="$$"

usage() {
	cat <<-EOF
		Usage: $(basename "$0") enable | disable | status | available <feature>
		Supported features: gui downclock-cpu perf-governor revpi-con-can
		                    var-log.mount dphys-swapfile
		                    teamviewer-revpi pimodbus-master
		                    pimodbus-slave systemd-timesyncd ssh
		                    logi-rts nodered noderedrevpinodes-server
		                    revpipyload bluetooth ieee80211 avahi
		                    external-antenna
	EOF
}

# do_gui <verb>
do_gui() {
	case "$1" in
	enable)
		/bin/systemctl set-default graphical.target
		;;
	disable)
		/bin/systemctl set-default multi-user.target
		;;
	status)
		[ "$(/bin/systemctl get-default)" != "graphical.target" ]
		return
		;;
	availstat)
		if do_gui available; then
			return 2
		fi
		do_gui status "$2"
		return
		;;
	available)
		if [ -e /usr/bin/startx ]; then
			return 1
		else
			return 0
		fi
		;;
	esac
}

rpi_revision_code() {
	# see https://www.raspberrypi.com/documentation/computers/raspberry-pi.html#new-style-revision-codes
	code=$(grep Revision /proc/cpuinfo | cut -d' ' -f2)

	if [ -z "$code" ]; then
		echo >&2 "Unable to determine board revision code. Not running on a RevPi?. Aborting."
		# we are running in a subshell, thus cannot exit directly here
		kill -10 "$PROC"
		return
	fi

	# Convert the hexadecimal revision code to base 10
	echo $((16#${code}))
}

rpi_type() {
	code=$(rpi_revision_code)
	mask=4080

	echo $(((code & mask) >> 4))
}

is_cm1() {
	test "$(rpi_type)" -eq 6
}

is_not_cm1() {
	! is_cm1
}

is_cm3() {
	test "$(rpi_type)" -eq 10
}

is_cm4s() {
	test "$(rpi_type)" -eq 21
}

is_cm4() {
	test "$(rpi_type)" -eq 20
}

is_cm4_with_wifi() {
	if is_cm4 && grep -q 'DRIVER=brcmfmac' /sys/class/ieee80211/phy0/device/uevent 2>/dev/null; then
		return 0
	else
		return 1
	fi
}

is_revpi_connect() {
	/bin/grep -F -q 'kunbus,revpi-connect' /proc/device-tree/compatible &&
		! /bin/grep -F -q 'kunbus,revpi-connect4' /proc/device-tree/compatible
}

# do_governor <verb> <governor>
do_governor() {
	case "$1" in
	enable)
		if do_governor available; then
			return
		fi
		/bin/sed -r -i -e "/^GOVERNOR=/d" "$CPUFREQCONFIG" \
			2>/dev/null
		echo "GOVERNOR=$2" >>"$CPUFREQCONFIG"
		do_service disable raspi-config
		do_service enable cpufrequtils
		;;
	disable)
		if do_governor available; then
			return
		fi
		do_service disable cpufrequtils
		do_service enable raspi-config
		/bin/sed -r -i -e "/^GOVERNOR=/d" "$CPUFREQCONFIG" \
			2>/dev/null
		;;
	status)
		val=$(/bin/grep -E "^GOVERNOR=$2" "$CPUFREQCONFIG" \
			2>/dev/null |
			/usr/bin/cut -d= -f2- | /usr/bin/tail -1)
		if [ -z "$val" ]; then
			echo -n "ondemand "
		else
			echo -n "$val "
		fi
		if [ -n "$2" ]; then
			[ "$2" != "$val" ]
			return
		else
			[ -z "$val" ]
			return
		fi
		;;
	available)
		is_not_cm1 &&
			/usr/bin/dpkg-query -s cpufrequtils >/dev/null 2>&1
		[ $? = 1 ]
		return
		;;
	availstat)
		if do_governor available; then
			return 2
		fi
		do_governor status "$2"
		return
		;;
	esac
}

get_config_var() {
	/bin/grep -E "^[[:blank:]]*${1}=" "$CONFIG" |
		/usr/bin/cut -d= -f2- | /usr/bin/tail -1
}

clear_config_var() {
	/bin/sed -r -i -e "/^[[:blank:]]*${1}=${2}/d" "$CONFIG"
	/bin/sync
}

set_config_var() {
	if [ "$(get_config_var $1)" = "$2" ]; then
		return
	fi
	clear_config_var "$1"
	echo "$1=$2" >>"$CONFIG"
	/bin/sync
}

# do_config <verb> <variable-name> <variable-value> <available-hook>
do_config() {
	case "$1" in
	enable)
		set_config_var "$2" "$3"
		;;
	disable)
		clear_config_var "$2" "$3"
		;;
	status)
		val="$(get_config_var $2)"
		if [ -z "$val" ]; then
			echo -n "0 "
		else
			echo -n "$val "
		fi
		if [ -n "$3" ]; then
			[ "$3" != "$val" ]
			return
		else
			[ -z "$val" ]
			return
		fi
		;;
	available)
		eval "$4"
		[ $? = 1 ]
		return
		;;
	availstat)
		if do_config available "$2" "$3" "$4"; then
			return 2
		fi
		do_config status "$2" "$3" "$4"
		return
		;;
	esac
}

# do_overlay <verb> <overlay-name> <available-hook>
do_overlay() {
	case "$1" in
	enable)
		clear_config_var "dtoverlay" "$2"
		echo "dtoverlay=$2" >>"$CONFIG"
		/usr/bin/dtoverlay "$2"
		;;
	disable)
		clear_config_var "dtoverlay" "$2"
		/usr/bin/dtoverlay -r "$2"
		;;
	status)
		/bin/grep -E -q "^[[:blank:]]*dtoverlay=$2" "$CONFIG"
		[ $? = 1 ]
		return
		;;
	available)
		eval "$3"
		[ $? = 1 ]
		return
		;;
	availstat)
		if do_overlay available "$2" "$3"; then
			return 2
		fi
		do_overlay status "$2" "$3"
		return
		;;
	esac
}

avahi-daemon-post-disable() {
	# Disable the avahi socket AFTER disabling the service unit
	# Note: This is because a connected socket could interrupt stop
	/bin/systemctl disable avahi-daemon.socket
	/bin/systemctl stop avahi-daemon.socket
}
avahi-daemon-post-enable() {
	# Enable the avahi socket after enabling the service unit
	/bin/systemctl enable avahi-daemon.socket
	/bin/systemctl start avahi-daemon.socket
}

dphys-swapfile-post-disable() {
	# remove swapfile
	/sbin/dphys-swapfile uninstall
}

var-log.mount-pre-enable() {
	# disable is no longer sufficient on stretch
	/bin/systemctl unmask var-log.mount
}

var-log.mount-post-disable() {
	/bin/systemctl mask var-log.mount
}

# do_service <verb> <service>
do_service() {
	declare -f "$2-pre-$1" >/dev/null 2>&1 && eval "$2-pre-$1"
	case "$1" in
	enable)
		/bin/systemctl enable "$2"
		/bin/systemctl start "$2"
		;;
	disable)
		/bin/systemctl disable "$2"
		/bin/systemctl stop "$2"
		;;
	status)
		/bin/systemctl is-enabled "$2" >/dev/null 2>&1
		[ $? = 1 ]
		return
		;;
	available)
		/bin/systemctl status "$2" 2>&1 | /bin/grep -qE "not(-| be )found"
		return
		;;
	availstat)
		if do_service available "$2"; then
			return 2
		fi
		do_service status "$2"
		return
		;;
	esac
	ret=$?
	declare -f "$2-post-$1" >/dev/null 2>&1 && eval "$2-post-$1"
	return $ret
}

# do_wireless <verb> <type> (where type is "bluetooth" or "ieee80211")
do_wireless() {
	shopt -s nullglob
	if grep -q -E "(revpi-flat|revpi-connect4)" "/proc/device-tree/compatible"; then
		if [ "$2" = "ieee80211" ]; then
			#built-in devices are recognizable by having a devicetree node
			IDX=(/sys/class/"$2"/*)
			if grep -q -E 'DRIVER=(brcmfmac|mwifiex_sdio)' "$IDX"/device/uevent; then
				# search for rfkill directory
				IDX=("$IDX"/rfkill*)
				# strip everything except index
				IDX="${IDX##*/rfkill}"
			fi
		else
			if grep -q "revpi-flat" "/proc/device-tree/compatible"; then
				[ ! -c /dev/ttyUSB0 ] && return 0
			fi

			IDX=(/sys/class/bluetooth/hci0)
			[ -L "$IDX" ] || hciattach /dev/ttyUSB0 any
			# check if device available
			[ ! -L "$IDX" ] && return 0
			IDX=$(cat "$IDX"/rfkill*/index)
		fi
	fi
	shopt -u nullglob

	case "$1" in
	enable)
		[ "$IDX" ] && rfkill unblock "$IDX"
		;;
	disable)
		[ "$IDX" ] && rfkill block "$IDX"
		;;
	status)
		[ -z "$IDX" ] && return 0
		disabled=$(</sys/class/rfkill/rfkill"$IDX"/soft)
		# invert value
		((disabled))
		return
		;;
	available)
		[ -z "$IDX" ]
		return
		;;
	availstat)
		[ -z "$IDX" ] && return 2
		disabled=$(</sys/class/rfkill/rfkill"$IDX"/soft)
		# invert value
		((disabled))
		return
		;;
	esac
}

do_cm4_external_antenna() {
	case "$1" in
	enable)
		clear_config_var "dtparam" "ant1"
		clear_config_var "dtparam" "ant2"
		echo "dtparam=ant2" >>"$CONFIG"
		;;
	disable)
		clear_config_var "dtparam" "ant1"
		clear_config_var "dtparam" "ant2"
		;;
	status)
		/bin/grep -E -q "^[[:blank:]]*dtparam=ant2$" "$CONFIG"
		[ $? = 1 ]
		return
		;;
	available)
		is_cm4_with_wifi
		[ $? = 1 ]
		return
		;;
	availstat)
		if do_cm4_external_antenna available; then
			return 2
		fi
		do_cm4_external_antenna status
		return
		;;
	esac
}

if [ "$1" != enable ] &&
	[ "$1" != disable ] &&
	[ "$1" != status ] &&
	[ "$1" != available ] &&
	[ "$1" != availstat ]; then
	usage
	exit
fi

cmd="$1"
shift
while [ $# -gt 0 ]; do
	svc="$1"
	case "$svc" in
	gui)
		do_gui "$cmd"
		;;
	downclock-cpu)
		if [[ $2 =~ ^[0-9]+$ ]]; then
			arg="$2"
			shift
		else
			arg=""
		fi
		do_config "$cmd" arm_freq "$arg" is_not_cm1
		;;
	perf-governor)
		do_governor "$cmd" performance
		;;
	revpi-con-can)
		do_overlay "$cmd" "$svc" is_revpi_connect
		;;
	var-log.mount)
		do_service "$cmd" "$svc"
		;;
	dphys-swapfile)
		do_service "$cmd" "$svc"
		;;
	teamviewer-revpi)
		do_service "$cmd" "$svc"
		;;
	pimodbus-master)
		do_service "$cmd" "$svc"
		;;
	pimodbus-slave)
		do_service "$cmd" "$svc"
		;;
	systemd-timesyncd)
		do_service "$cmd" "$svc"
		;;
	ssh)
		do_service "$cmd" "$svc"
		;;
	logi-rts)
		do_service "$cmd" "$svc"
		;;
	nodered)
		do_service "$cmd" "$svc"
		;;
	noderedrevpinodes-server)
		do_service "$cmd" "$svc"
		;;
	revpipyload)
		do_service "$cmd" "$svc"
		;;
	avahi)
		do_service "$cmd" avahi-daemon
		;;
	bluetooth)
		do_wireless "$cmd" "$svc"
		;;
	ieee80211)
		do_wireless "$cmd" "$svc"
		;;
	external-antenna)
		do_cm4_external_antenna "$cmd"
		;;
	*)
		usage
		exit
		;;
	esac
	echo -n "$? "
	shift
done

echo
